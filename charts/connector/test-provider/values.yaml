# #############################################################################
# Copyright (c) 2022,2024 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
# Copyright (c) 2021,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
# #############################################################################

configuration:
  postgresuser: &postgresuser testuser
  postgrespass: &postgrespass testpass
  edcKey: &edcKey TEST

nameOverride: ""
fullnameOverride: ""
seedTestdata: true  # Toggle seeding of testdata. Can be disabled when e.g. only edc is used as consumer. Default true.
testdataConfigMap: ""  # Provide a custom configmap for post-install-job-upload-testdata.yaml.

tractusx-connector:
  enabled: true
  install:
    postgresql: false
    vault: false
  participant:
    id:
  controlplane:
    ssi:
      miw:
        url:
        authorityId:
      oauth:
        tokenurl:
        client:
          id:
          secretAlias:
    ingresses:
      - enabled: true
        hostname: "controlplane.test"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - protocol
          - management
        tls:
          enabled: true
          secretName: tls-secret
    endpoints:
      management:
        authKey: *edcKey
    securityContext:
      readOnlyRootFilesystem: false
    resources:
      limits:
        cpu: 500m
        memory: 750Mi
      requests:
        cpu: 300m
        memory: 750Mi

  dataplane:
    ingresses:
      - enabled: true
        hostname: "dataplane.test"
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        endpoints:
          - public
        className: "nginx"
        tls:
          enabled: true
          secretName: tls-secret
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 512Mi

  backendService:
    httpProxyTokenReceiverUrl: "https://submodelserver.test/data/endpoint-data-reference-provider1"
  vault:
    hashicorp:
      url:
      token:
      timeout: 30
      healthCheck:
        enabled: true
        standbyOk: true
      paths:
        secret:
        health:
    secretNames:
      transferProxyTokenSignerPrivateKey:
      transferProxyTokenSignerPublicKey:
      transferProxyTokenEncryptionAesKey:

  postgresql:
    enabled: true
    auth:
      database: "edc"
      username: *postgresuser
      password: *postgrespass
    username: *postgresuser
    password: *postgrespass
    jdbcUrl: "jdbc:postgresql://edc-postgresql:5432/edc"

postgresql:
  fullnameOverride: edc-postgresql
  nameOverride: edc-postgresql
  enabled: true
  primary:
    persistence:
      enabled: false
      size: 1Gi
  readReplicas:
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 750Mi
      requests:
        cpu: 250m
        memory: 750Mi
  auth:
    database: edc
    username: *postgresuser
    postgresPassword: *postgrespass
    password: *postgrespass

digital-twin-registry:
  enabled: true
  enableKeycloak: false

  postgresql:
    auth:
      existingSecret: registry-db-postresinit
    primary:
      persistence:
        enabled: false
        size: 1Gi
      resources:
        limits:
          cpu: 500m
          memory: 750Mi
        requests:
          cpu: 200m
          memory: 750Mi

  registry:
    host: digital-twin-registry.test
    ingress:
      enabled: true
      urlPrefix: /semantics/registry
      className: nginx
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: /semantics/registry
    authentication: false
    livenessProbe:
      failureThreshold: 6
      initialDelaySeconds: 90
      periodSeconds: 10
    readinessProbe:
      failureThreshold: 6
      initialDelaySeconds: 90
      periodSeconds: 10
    resources:
      limits:
        cpu: 1000m
        memory: 750Mi
      requests:
        cpu: 250m
        memory: 750Mi

submodelservers:
  enabled: true
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    hosts:
      - host: submodelserver.test
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - submodelserver.test
        secretName: tls-secret
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 512Mi
